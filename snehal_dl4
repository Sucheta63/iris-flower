import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

taining_set=pd.read_csv("/content/train.csv")

taining_set.info()

taining_set=taining_set.iloc[:,1:2].values

taining_set.shape

#normalisation
from sklearn.preprocessing import MinMaxScaler
sc=MinMaxScaler()
taining_set=sc.fit_transform(taining_set)

x_train=taining_set[0:1235]
y_train=taining_set[1:1236]
x_train=np.reshape(x_train,(1235,1,1))

from keras.models import Sequential
from keras.layers import Dense
from keras.layers import LSTM

regressor=Sequential()

regressor.add(LSTM(units=4,activation='sigmoid',input_shape=(None,1)))
regressor.add(Dense(units=1))

regressor.compile(optimizer='adam',loss='mean_squared_error')
regressor.fit(x_train,y_train,batch_size=32,epochs=200)

#testing data
test_data=pd.read_csv("/content/test.csv")

test_data.shape


real_price=test_data.iloc[:,1:2].values
inputs=real_price
inputs=sc.transform(inputs)
inputs=np.reshape(inputs,(19,1,1))
predict_price=regressor.predict(inputs)
predict_price=sc.inverse_transform(predict_price)

plt.plot(real_price,color='red',label='real google stock price')
plt.plot(predict_price,color='blue',label='predicted google stock price')
plt.title('google stock price prediction')
plt.xlabel('time')
plt.ylabel('google stock price')
plt.legend()
plt.show()
